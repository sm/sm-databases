#!/bin/sh

typeset -g architecture os

mongodb_initialize()
{
  # The binary downloads are customized based on OS and Arch.
  mongodb_set_architecture
  mongodb_set_os
}

mongodb_prefetch()
{
  package define \
    base_url "http://fastdl.mongodb.org/${os}" \
    file "mongodb-${os}-${architecture}-${package_version}.${archive_format}" \
    dir "mongodb-${os}-${architecture}-${package_version}"
}

mongodb_configure()
{
  true # no-op
}

mongodb_build()
{
  true # no-op
}

mongodb_install()
{
  local file files name

  paths create "${install_path}"

  files=($(
    find "${source_path}/${package_dir}/bin" -mindepth 1 -maxdepth 1 -type f
  ))

  for file in "${files[@]}"
  do
    name=${file//*\/}
    paths create "${install_path}/bin"
    files copy from "${file}" to "${install_path}/bin/${name}" mode 0755
  done
}

mongodb_postinstall()
{
  if ! path exists "${install_base_path}"
  then activate_package "${package_name}" "${package_version}" ; fi
}

mongodb_set_architecture()
{
  case $(os arch capable) in
    (i386|i686)
      architecture="i686"
      ;;

    (x86_64)
      architecture="x86_64"
      ;;

    (*)
      if [[ "$action" = *install ]]
      then
        log fail "Unhandled architecture: $HOSTTYPE for ${extension} ${action}"
      fi
      ;;
  esac
}

mongodb_set_os()
{
  case $(os type) in
    (*linux*)
      os="linux"
      ;;
    (*darwin*)
      os="osx"
      ;;
    (*solaris*)
      os="sunos5"
      if [[ "$architecture" = "i686" ]]
      then architecture="i86pc" ; fi # C'mon Solaris, really???
      ;;
    (*)
      if [[ "$action" = *install ]] ; then
        log fail "Unhandled operating system: $MACHTYPE for ${extension} ${action}"
      fi
      ;;
  esac
}

mongodb_backup()
{
  true # TODO: Implement this
}

mongodb_setup_init()
{
  template install "mongodb/init.d" to "${init_scripts_path}/${extension}"

  template seed "${init_scripts_path}/${extension}" \
    sm_path "$sm_path"


  files chmod a+x "${init_scripts_path}/${extension}"
}

mongodb_conf()
{
  path create "${confd_path}/${extension}"

  template install "mongodb/mongodb.conf" \
    to "${confd_path}/${extension}/${extension}.conf"
}

