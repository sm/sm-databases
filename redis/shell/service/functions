#!/bin/sh

redis_service_setup()
{
  if file is nonempty "${service_config_file}"
  then
    log "${service_config_file} already exists, not overwriting."
  else
    __sm.package.init

    log "#installing redis.conf file to ${service_config_file}"

    paths create "${service_config_path}"

    sed -e "s#pidfile .*\$#pidfile ${service_pid_file}#" \
        -e "s#logfile .*\$#logfile ${service_log_file}#" \
        -e "s#dir .*\$#dir ${service_db_path}/active#" \
        -e "s#^.*daemonize .*\$#daemonize yes#" \
        -e "s#dbfilename .*\$#dbfilename ${service_db_file}#" \
        -e "s#port .*\$#port ${service_port}#" \
        -e "s#bind .*\$#bind ${service_bind_interface}#" \
      "${source_path}/${package_dir}/redis.conf" > "${service_config_file}"

    paths chown "$service_user" recursive "${service_config_path}"
  fi

  return 0
}

redis_status()
{
  service_status

  log "  pidfile: $(awk '/^pidfile/{print $2}' ${service_config_file})"
  log "  logfile: $(awk '/^logfile/{print $2}' ${service_config_file})"
  log "  dbfile: $(awk '/^dbfilename/{print $2}' ${service_config_file})"
}

